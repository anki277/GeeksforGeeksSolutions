//Initial Template for Java

import java.util.*;



 // } Driver Code Ends
//User function Template for Java

// Helper class to find largest number with minimum frequency
class Geeks
{
    // Function to find largest number with minimum frequency
    public static int LargButMinFreq(int arr[], int n)
    {
        TreeMap<Integer,Integer> hs= new TreeMap<Integer,Integer>(Collections.reverseOrder());
        for(int i=0;i<n;i++)
        {
            if(!hs.containsKey(arr[i]))
                hs.put(arr[i],1);
            else
                hs.put(arr[i],hs.get(arr[i])+1);
        }
        int min = Integer.MAX_VALUE;
        int res = 0;
        for(Map.Entry<Integer,Integer> e : hs.entrySet()){
            if(e.getValue()<min)
            {
                min = e.getValue();
                res = e.getKey();
            }
        }
        return res;
        
        }// Your code here
        
    }

// { Driver Code Starts.

// Driver class with main function
class GFG 
{
    // Main function
	public static void main (String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		
		// Iterating over testcases
		while(t-- > 0)
		{
		    int n = sc.nextInt();
		    int arr[] = new int[n];
		    
		    for(int i = 0; i < n; i++)
		     arr[i] = sc.nextInt();
		     
		    Geeks obj = new Geeks();
		    System.out.println(obj.LargButMinFreq(arr, n));
		}
	}
}  // } Driver Code Ends
