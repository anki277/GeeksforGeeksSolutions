
import java.io.*;
import java.util.*;

public class GFG {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String[] inputLine;
            inputLine = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            int x = Integer.parseInt(inputLine[1]);
            int[] arr = new int[n];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            Solution ob = new Solution();
            int ans[] = ob.sumClosest(arr, x);
            for (Integer val: ans) 
                System.out.print(val+" "); 
            System.out.println();
        }
    }
}// } Driver Code Ends


//User function Template for Java

class Solution {
    int[] sumClosest(int[] arr, int x) {
           int[] ans =new int[2];
       int low=0,high=arr.length-1,diff=Integer.MAX_VALUE;
       while(low<high){
           int temp=x-(arr[low]+arr[high]);
           if(diff>Math.abs(temp)){
               ans[0]=arr[low];
               ans[1]=arr[high];
               diff=Math.abs(temp);
           }
           if(temp==0)
               break;
           if(temp>0)
               low++;
           if(temp<0)
               high--;
       }
       return ans;// code here 
    }
}
