import java.io.*;
import java.util.*;
import java.util.stream.*;

class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) {
            
            //taking input n
            int n = Integer.parseInt(br.readLine().trim());
            long arr[] = new long[n];
            String inputLine[] = br.readLine().trim().split(" ");
            
            //adding elements to the array
            for (int i = 0; i < n; i++) {
                arr[i] = Long.parseLong(inputLine[i]);
            }

            Solution ob = new Solution();
            
            //calling equilibriumPoint() function
            System.out.println(ob.equilibriumPoint(arr, n));
        }
    }
}// } Driver Code Ends


class Solution {

    
    // a: input array
    // n: size of array
    // Function to find equilibrium point in the array.
    public static int equilibriumPoint(long arr[], int n) {
        int sum=0,s=0,eq=-1;
 if(n==0)
 eq=-1;
 else if(n==1)
 eq=1;
 else
 {
     for(int i=0;i<n;i++)
     {
         for(int j=0;j<i;j++)
         {
             sum+=(int)arr[j];
         }
             for(int k=i+1;k<n;k++)
             {
                s+=(int)arr[k];
             }
             if(sum==s)
             eq=i+1;
             sum=0;
             s=0;
     }
 }
        return eq;// Your code here
    }
}
